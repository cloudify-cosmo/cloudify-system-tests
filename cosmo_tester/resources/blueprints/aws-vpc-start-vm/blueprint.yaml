tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3.1/types.yaml
  - http://www.getcloudify.org/spec/aws-plugin/1.3.1/plugin.yaml

inputs:
  image_id:
    description: >
      Image to be used when launching VM
  instance_type:
    description: >
      Size of VM
  vpc_id:
    description: >
      The VPC to deploy into
  vpc_subnet_id:
    description: >
      The VPC subnet to deploy into.
      This subnet must auto-assign public IPs and have an internet gateway
  server_name:
    description: >
      Name of simple server deployed.
  aws_access_key_id:
    description: >
      Access key for AWS
  aws_secret_access_key:
    description: >
      Secret key for AWS
  ec2_region_name:
    description: >
      Region in which to deploy server

dsl_definitions:
  aws_configuration: &aws_configuration
    aws_access_key_id: { get_input: aws_access_key_id }
    aws_secret_access_key: { get_input: aws_secret_access_key }
    ec2_region_name: { get_input: ec2_region_name }

node_templates:
  simple-server:
    type: cloudify.aws.nodes.Instance
    properties:
      aws_config: *aws_configuration
      resource_id: { get_input: server_name }
      image_id: { get_input: image_id }
      instance_type: { get_input: instance_type }
      install_agent: false
    relationships:
      - type: cloudify.aws.relationships.instance_connected_to_security_group
        target: simple-server-security-group
      - type: cloudify.aws.relationships.instance_contained_in_subnet
        target: vpc_subnet

  # The VPC and subnet must already exist unless we can create one with the
  # setting that causes public IPs to be auto-assigned
  # (this type of VPC+subnet is needed for the marketplace builder)
  ###########################################################
  # The already existing VPC
  ###########################################################
  vpc:
    type: cloudify.aws.nodes.VPC
    properties:
      resource_id: { get_input: vpc_id }
      use_external_resource: true
      aws_config: *aws_configuration
      # We don't need this to be set but it is required by the schema
      cidr_block: ''

  ###########################################################
  # The already existing VPC subnet
  ###########################################################
  vpc_subnet:
    type: cloudify.aws.nodes.Subnet
    properties:
      resource_id: { get_input: vpc_subnet_id }
      use_external_resource: true
      aws_config: *aws_configuration
      # We don't need this to be set but it is required by the schema
      cidr_block: ''

  simple-server-security-group:
    type: cloudify.aws.nodes.SecurityGroup
    properties:
      description: Security Group for the simple server
      aws_config: *aws_configuration
      rules:
        # SSH
        - ip_protocol: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        # Manager HTTP
        - ip_protocol: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        # Manager HTTPS
        - ip_protocol: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
        # TODO
        - ip_protocol: tcp
          from_port: 5555
          to_port: 5555
          cidr_ip: 0.0.0.0/0
        # Rabbit
        - ip_protocol: tcp
          from_port: 5672
          to_port: 5672
          cidr_ip: 0.0.0.0/0
        # TODO
        - ip_protocol: tcp
          from_port: 8080
          to_port: 8080
          cidr_ip: 0.0.0.0/0
        # InfluxDB
        - ip_protocol: tcp
          from_port: 8086
          to_port: 8086
          cidr_ip: 0.0.0.0/0
        # TODO
        - ip_protocol: tcp
          from_port: 8101
          to_port: 8101
          cidr_ip: 0.0.0.0/0
        # Manager HTTP file server
        - ip_protocol: tcp
          from_port: 53229
          to_port: 53229
          cidr_ip: 0.0.0.0/0
    relationships:
      #######################################################
      # Make this security group in a VPC
      #######################################################
      - type: cloudify.aws.relationships.security_group_contained_in_vpc
        target: vpc

###########################################################
# This outputs section exposes the application endpoint.
# You can access it by running:
#   - cfy deployments -d <deployment_id> outputs
###########################################################

outputs:
  simple_vm_public_ip_address:
    value: { get_attribute: [simple-server, public_ip_address] }
