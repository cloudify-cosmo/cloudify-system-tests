tosca_definitions_version: cloudify_dsl_1_1

imports:
    - http://www.getcloudify.org/spec/cloudify/3.3m4/types.yaml
    - http://www.getcloudify.org/spec/openstack-plugin/1.3m4/plugin.yaml

plugins:
  windows_host_plugin:
    source: windows-host-plugin
    executor: host_agent

node_templates:

  keypair:
    type: cloudify.openstack.nodes.KeyPair
    properties:
        private_key_path: /tmp/windows-test.pem

  vm:
    type: cloudify.openstack.nodes.WindowsServer
    properties:
      image: MODIFIED_BY_TEST
      flavor: MODIFIED_BY_TEST
      server:
        name: windows-agent-vm
        userdata: |
          #ps1_sysnative
          winrm quickconfig -q
          winrm set winrm/config/winrs '@{MaxMemoryPerShellMB="300"}'
          winrm set winrm/config '@{MaxTimeoutms="1800000"}'
          winrm set winrm/config/service '@{AllowUnencrypted="true"}'
          winrm set winrm/config/service/auth '@{Basic="true"}'
          &netsh advfirewall firewall add rule name="WinRM 5985" protocol=TCP dir=in localport=5985 action=allow
          &netsh advfirewall firewall add rule name="WinRM 5986" protocol=TCP dir=in localport=5986 action=allow

          msiexec /i https://www.python.org/ftp/python/2.7.6/python-2.7.6.msi TARGETDIR=C:\Python27 ALLUSERS=1 /qn

    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          max_retries: 35
      cloudify.interfaces.worker_installer:
        install:
          inputs:
            cloudify_agent: &CLOUDIFY_AGENT
              service:
                successful_consecutive_status_queries_count: 10
                status_transition_sleep_interval: 5
                start_timeout: 240
                stop_timeout: 240
              user: Admin
              password: { get_attribute: [SELF, password] }
        start:
          inputs:
            cloudify_agent: *CLOUDIFY_AGENT

        stop:
          inputs:
            cloudify_agent: *CLOUDIFY_AGENT
        uninstall:
          inputs:
            cloudify_agent: *CLOUDIFY_AGENT
        restart:
          inputs:
            cloudify_agent: *CLOUDIFY_AGENT
      cloudify.interfaces.plugin_installer:
        install:
          inputs:
            cloudify_agent: *CLOUDIFY_AGENT
    relationships:
      - type: cloudify.openstack.server_connected_to_keypair
        target: keypair
  app:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        create: windows_host_plugin.windows_host_plugin.tasks.task
        start: scripts/hello.py
    relationships:
      -  type: cloudify.relationships.contained_in
         target: vm

outputs:
  task_execution:
    value:
      executed: { get_attribute: [app, windows_host_plugin.tasks.task] }

