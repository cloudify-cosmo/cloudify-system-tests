tosca_definitions_version: cloudify_dsl_1_2

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3m6/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3m6/plugin.yaml

plugins:
  windows_host_plugin:
    source: windows-host-plugin
    executor: host_agent

inputs:
  image: {}
  flavor: {}

node_templates:

  keypair:
    type: cloudify.openstack.nodes.KeyPair
    properties:
      private_key_path: /tmp/windows-test.pem

  vm:
    type: cloudify.openstack.nodes.WindowsServer
    properties:
      image: { get_input: image }
      flavor: { get_input: flavor }
      cloudify_agent:
        user: Admin
        port: 5985
      server:
        userdata: |
          #ps1_sysnative
          winrm quickconfig -q
          winrm set winrm/config              '@{MaxTimeoutms="1800000"}'
          winrm set winrm/config/winrs        '@{MaxMemoryPerShellMB="300"}'
          winrm set winrm/config/service      '@{AllowUnencrypted="true"}'
          winrm set winrm/config/service/auth '@{Basic="true"}'
          &netsh advfirewall firewall add rule name="WinRM 5985" protocol=TCP dir=in localport=5985 action=allow
          &netsh advfirewall firewall add rule name="WinRM 5986" protocol=TCP dir=in localport=5986 action=allow
    relationships:
      - type: cloudify.openstack.server_connected_to_keypair
        target: keypair

  app:
    type: cloudify.nodes.ApplicationModule
    interfaces:
      cloudify.interfaces.lifecycle:
        create: windows_host_plugin.windows_host_plugin.tasks.task
        start: scripts/hello.py
    relationships:
      -  type: cloudify.relationships.contained_in
         target: vm

outputs:
  task_execution:
    value:
      executed: { get_attribute: [app, windows_host_plugin.tasks.task] }
