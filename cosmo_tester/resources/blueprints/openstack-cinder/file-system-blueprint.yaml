tosca_definitions_version: cloudify_dsl_1_0

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3m3/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3m3/plugin.yaml

inputs:

  image:
    description: >
      Image to be used when launching agent VM's.

  flavor:
    description: >
      Flavor of the agent VM's.

  volume_size:
    description: >
      Size of the volume to be created.

  fs_type:
    description: >
      The File system type to use.

  fs_mount_path:
    description: >
      The mount point.

relationships:
  fs_contained_in_compute_with_failing_chown:
    derived_from: cloudify.relationships.file_system_contained_in_compute
    source_interfaces:
      cloudify.interfaces.relationship_lifecycle:
        preconfigure:
          implementation: scripts/substitute_chown.sh
          inputs:
            mount_point:
              default: { get_property: [volume_fs, fs_mount_path] }

node_templates:

  test_vm:
    type: cloudify.openstack.nodes.Server
    properties:
        image: { get_input: image }
        flavor: { get_input: flavor }

  test_volume:
    type: cloudify.openstack.nodes.Volume
    properties:
      volume:
        size: { get_input: volume_size }
    relationships:
      - target: test_vm
        type: cloudify.openstack.volume_attached_to_server

  volume_fs:
    type: cloudify.nodes.FileSystem
    properties:
      fs_type: { get_input: fs_type }
      fs_mount_path: { get_input: fs_mount_path }
    relationships:
      - type: cloudify.relationships.file_system_depends_on_volume
        target: test_volume
      - type: fs_contained_in_compute_with_failing_chown
        target: test_vm

  volume_tester:
    type: cloudify.nodes.Root
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          implementation: scripts/write-to-volume.sh
          inputs:
            mount_point: { get_property: [volume_fs, fs_mount_path] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: volume_fs
      - type: cloudify.relationships.contained_in
        target: test_vm
