
variable "resource_suffix" {}
variable "public_key_path" {}
variable "private_key_path" {}
variable "flavor" {}

output "public_ip_address_0" { value = "${openstack_networking_floatingip_v2.floatingip.address}" }
output "keypair_name" { value = "${openstack_compute_keypair_v2.keypair.name}" }
output "networks" {
  value = {
    {% for n in range(num_of_networks) %}
    "network_{{ n }}" = "${openstack_compute_instance_v2.server.network.{{ n }}.fixed_ip_v4}",
    {% endfor %}
  }
}
{% for n in range(num_of_networks) %}
output "private_ip_address_{{ n }}" { value = "${openstack_compute_instance_v2.server.network.{{ n }}.fixed_ip_v4}" }
{% endfor %}
output "server_name_0" { value = "${openstack_compute_instance_v2.server.name}" }
output "server_id_0" { value = "${openstack_compute_instance_v2.server.id}" }


{% for n in range(num_of_networks) %}
resource "openstack_networking_router_v2" "router_{{ n }}" {
  name = "router-{{ n }}-${var.resource_suffix}"
  external_gateway = "dda079ce-12cf-4309-879a-8e67aec94de4"
}

resource "openstack_networking_network_v2" "network_{{ n }}" {
  name = "network-{{ n }}-${var.resource_suffix}"
}

resource "openstack_networking_subnet_v2" "subnet_{{ n }}" {
  name = "subnet-{{ n }}-${var.resource_suffix}"
  network_id = "${openstack_networking_network_v2.network_{{ n }}.id}"
  cidr = "1{{ n }}.0.0.0/24"
  dns_nameservers = ["8.8.8.8", "8.8.4.4"]
}

resource "openstack_networking_router_interface_v2" "router_interface_{{ n }}" {
  router_id = "${openstack_networking_router_v2.router_{{ n }}.id}"
  subnet_id = "${openstack_networking_subnet_v2.subnet_{{ n }}.id}"
}
{% endfor %}

resource "openstack_compute_secgroup_v2" "security_group" {
  name = "security_group-${var.resource_suffix}"
  description = "cloudify manager security group"
  rule {
    from_port = 22
    to_port = 22
    ip_protocol = "tcp"
    cidr = "0.0.0.0/0"
  }
  rule {
    from_port = 80
    to_port = 80
    ip_protocol = "tcp"
    cidr = "0.0.0.0/0"
  }
  rule {
    from_port = 8086
    to_port = 8086
    ip_protocol = "tcp"
    cidr = "0.0.0.0/0"
  }
  rule {
    from_port = 8080
    to_port = 8080
    ip_protocol = "tcp"
    cidr = "0.0.0.0/0"
  }
  {% for n in range(num_of_networks) %}
  rule {
    from_port = 1 
    to_port = 65535
    ip_protocol = "tcp"
    cidr = "${openstack_networking_subnet_v2.subnet_{{ n }}.cidr}"
  }
  {% endfor %}
  rule {
      from_port = 443
      to_port = 443
      ip_protocol = "tcp"
      cidr = "0.0.0.0/0"
    }
}

resource "openstack_compute_keypair_v2" "keypair" {
  name = "keypair-${var.resource_suffix}"
  public_key = "${file("${var.public_key_path}")}"
}


resource "openstack_networking_floatingip_v2" "floatingip" {
  pool = "GATEWAY_NET"
}

resource "openstack_compute_instance_v2" "server" {
  name = "server-${var.resource_suffix}"
  image_name = "{{ image_name }}"
  flavor_name = "${var.flavor}"
  key_pair = "${openstack_compute_keypair_v2.keypair.name}"
  security_groups = ["${openstack_compute_secgroup_v2.security_group.name}"]

  {% for n in range(num_of_networks) %}
  network {
    uuid = "${openstack_networking_network_v2.network_{{ n }}.id}"
  }
  {% endfor %}

  floating_ip = "${openstack_networking_floatingip_v2.floatingip.address}"

  provisioner "remote-exec" {
    inline = [
      "echo hello world"
    ]
    connection {
      type = "ssh"
      user = "centos"
      private_key = "${file("${var.private_key_path}")}"
      timeout = "10m"
      agent = "false"
    }
  }
}
